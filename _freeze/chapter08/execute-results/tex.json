{
  "hash": "1cca7b7eae083a3ad4fb1b0489280bf3",
  "result": {
    "markdown": "---\ntitle: Vertical and horizontal transmission\nexecute:\n  freeze: auto\n---\n\n:::{.callout-note}\nThis chapter is based on \"Chapter 6: Vertical and horizontal transmission\" in @Acerbi2022.\n:::\n\n## Vertical cultural transmission {#sec-vertical}\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np \nrng = np.random.default_rng()\n\nimport pandas as pd\nfrom tqdm import tqdm\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndef plot_multiple_runs(data_model):\n    groups = data_model.groupby(\"run\")\n    for _, g in groups:\n        g.index = g[\"generation\"]\n        g[\"p\"].plot(lw=.5, ylim=(0,1))\n\n    data_model.groupby(\"generation\")[\"p\"].mean().plot(c=\"k\", lw=\"1\")\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndef vertical_transmission(N, p_0, b, t_max, r_max):\n    # Create the output DataFrame\n    output = pd.DataFrame({\n        \"generation\" : np.tile(np.arange(t_max), r_max),\n        \"p\" : [ np.nan ] * t_max * r_max,\n        \"run\" : np.repeat(np.arange(r_max), t_max)\n    })\n\n    for r in range(r_max): \n        # Create first generation\n        population = pd.DataFrame({\"trait\": rng.choice([\"A\", \"B\"], size=N, replace=True, p=[p_0, 1 - p_0])})\n\n        # Add first generation's p for run r\n        output.loc[ r * t_max, \"p\"] = population[ population[\"trait\"] == \"A\" ].shape[0] / N\n\n        # # For each generation \n        for t in range(1, t_max): \n            # Copy individuals to previous_population DataFrame\n            previous_population = population.copy()\n\n            # randomly pick mothers and fathers\n            mother = previous_population[\"trait\"].sample(N, replace=True).reset_index(drop=True)\n            father = previous_population[\"trait\"].sample(N, replace=True).reset_index(drop=True)\n\n            # prepare next generation\n            population = pd.DataFrame({\"trait\": [np.nan] * N })\n\n            # Both parents are A, thus child adopts A\n            both_A = (mother == \"A\") & (father == \"A\")\n            # if sum(both_A) > 0:\n            population.loc[both_A,\"trait\"] = \"A\"\n\n            # Both parents are A, thus child adopts A\n            both_B = (mother == \"B\") & (father == \"B\")\n            # if sum(both_B) > 0:\n            population.loc[both_B,\"trait\"] = \"B\"\n\n            # If any empty NA slots are present (i.e. one A and one B parent) they adopt A with probability b\n            remaining = rng.choice([\"A\", \"B\"], size=population[\"trait\"].isna().sum(), replace=True, p=[b, 1 - b])\n            population.loc[population[\"trait\"].isna(),\"trait\"] = remaining\n            \n            # Get p and put it into output slot for this generation t and run r\n            output.loc[r * t_max + t, \"p\"] = population[ population[\"trait\"] == \"A\" ].shape[0] / N\n\n    return output \n```\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndata_model = vertical_transmission(N=10_000, p_0=0.01, b=0.6,t_max=50, r_max=5)\n\nplot_multiple_runs(data_model)\n```\n\n::: {.cell-output .cell-output-display}\n![](chapter08_files/figure-pdf/cell-5-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndata_model = vertical_transmission(N=10_000, p_0=0.1, b=0.5,t_max=50, r_max=5)\nplot_multiple_runs(data_model)\n```\n\n::: {.cell-output .cell-output-display}\n![](chapter08_files/figure-pdf/cell-6-output-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Horizontal cultural transmission\n\n::: {.callout-warning}\nThe code below is not yet correct and runs very slowly.\n:::\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndef vertical_horizontal_transmission(N, p_0, b, n, g, t_max, r_max):\n    # Create the output DataFrame\n    output = pd.DataFrame({\n        \"generation\" : np.tile(np.arange(t_max), r_max),\n        \"p\" : [ np.nan ] * t_max * r_max,\n        \"run\" : np.repeat(np.arange(r_max), t_max)\n    })\n\n    for r in range(r_max):\n        # Create first generation\n        population = pd.DataFrame({\"trait\": rng.choice([\"A\", \"B\"], size=N, replace=True, p=[p_0, 1 - p_0])})\n\n        # Add first generation's p for run r\n        output.loc[ r * t_max, \"p\"] = population[ population[\"trait\"] == \"A\" ].shape[0] / N\n\n        # For each generation \n        for t in tqdm(range(t_max)):\n            ### Vertical transmission =========================================================\n\n            # Copy individuals to previous_population DataFrame\n            previous_population = population.copy()\n\n            # randomly pick mothers and fathers\n            mother = previous_population[\"trait\"].sample(N, replace=True).reset_index(drop=True)\n            father = previous_population[\"trait\"].sample(N, replace=True).reset_index(drop=True)\n\n            # prepare next generation\n            population = pd.DataFrame({\"trait\": [np.nan] * N })\n\n            # Both parents are A, thus child adopts A\n            both_A = (mother == \"A\") & (father == \"A\")\n            # if sum(both_A) > 0:\n            population.loc[both_A,\"trait\"] = \"A\"\n\n            # Both parents are A, thus child adopts A\n            both_B = (mother == \"B\") & (father == \"B\")\n            # if sum(both_B) > 0:\n            population.loc[both_B,\"trait\"] = \"B\"\n\n            # If any empty NA slots are present (i.e. one A and one B parent) they adopt A with probability b\n            remaining = rng.choice([\"A\", \"B\"], size=population[\"trait\"].isna().sum(), replace=True, p=[b, 1 - b])\n            population.loc[population[\"trait\"].isna(),\"trait\"] = remaining\n            \n            # Get p and put it into output slot for this generation t and run r\n            output.loc[r * t_max + t, \"p\"] = population[ population[\"trait\"] == \"A\" ].shape[0] / N\n\n            # ### Horizontal transmission =========================================================\n\n            # previous_population = population.copy()\n            # # # N_B = number of Bs\n            # N_B = previous_population[previous_population[\"trait\"] == \"B\"].shape[0]\n\n            # # if there are B individuals to switch, and n is not zero:\n            # if (N_B > 0) & (n > 0):\n            #     # for each B individual:\n            #     for i in range(N_B):\n            #         # Pick n demonstrators\n            #         demonstrator = previous_population[\"trait\"].sample(n, replace=True)\n            #         # Get probability g \n            #         copy_ = rng.choice([True, False], n, p=[g, 1 - g], replace=True)\n            #         # if any demonstrators with A are to be copied:\n            #         if sum((demonstrator == \"A\") & (copy_)) > 0:\n            #           # The B individual switches to A \n            #           population[previous_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\n            next_population = population.copy()\n            # # N_B = number of Bs\n            N_B = next_population[next_population[\"trait\"] == \"B\"].shape[0]\n\n            # if there are B individuals to switch, and n is not zero:\n            if (N_B > 0) & (n > 0):\n                # for each B individual:\n                for i in range(N_B):\n                    # Pick n demonstrators\n                    demonstrator = population[\"trait\"].sample(n, replace=True)\n                    # Get probability g \n                    copy_ = rng.choice([True, False], n, p=[g, 1 - g], replace=True)\n                    # if any demonstrators with A are to be copied:\n                    if sum((demonstrator == \"A\") & (copy_)) > 0:\n                      # The B individual switches to A \n                      next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\n            # Get p and put it into output slot for this generation t and run r\n            output.loc[r * t_max + t, \"p\"] = next_population[ next_population[\"trait\"] == \"A\" ].shape[0] / N\n\n    return output\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nvertical_horizontal_transmission(N=1000, p_0=0.01, b=0.5, n=5, g=0.1, t_max=10, r_max=1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/10 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 10%|█         | 1/10 [00:00<00:03,  2.78it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 20%|██        | 2/10 [00:00<00:02,  2.91it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 30%|███       | 3/10 [00:00<00:02,  3.06it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 40%|████      | 4/10 [00:01<00:02,  2.98it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\r 50%|█████     | 5/10 [00:01<00:01,  2.90it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 60%|██████    | 6/10 [00:02<00:01,  2.94it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 70%|███████   | 7/10 [00:02<00:00,  3.01it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 80%|████████  | 8/10 [00:02<00:00,  3.10it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 90%|█████████ | 9/10 [00:02<00:00,  3.27it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r100%|██████████| 10/10 [00:03<00:00,  3.32it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r100%|██████████| 10/10 [00:03<00:00,  3.11it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n/home/fmoss/.local/lib/python3.10/site-packages/IPython/core/formatters.py:343: FutureWarning: In future versions `DataFrame.to_latex` is expected to utilise the base implementation of `Styler.to_latex` for formatting and rendering. The arguments signature may therefore change. It is recommended instead to use `DataFrame.style.to_latex` which also contains additional functionality.\n  return method()\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=tex}\n\\begin{tabular}{lrrr}\n\\toprule\n{} &  generation &      p &  run \\\\\n\\midrule\n0 &           0 &  0.010 &    0 \\\\\n1 &           1 &  0.011 &    0 \\\\\n2 &           2 &  0.015 &    0 \\\\\n3 &           3 &  0.022 &    0 \\\\\n4 &           4 &  0.026 &    0 \\\\\n5 &           5 &  0.027 &    0 \\\\\n6 &           6 &  0.027 &    0 \\\\\n7 &           7 &  0.020 &    0 \\\\\n8 &           8 &  0.016 &    0 \\\\\n9 &           9 &  0.012 &    0 \\\\\n\\bottomrule\n\\end{tabular}\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\ndata_model = vertical_horizontal_transmission(N=5_000, p_0=0.01, b=0.5, n=5, g=0.1, t_max=50, r_max=2)\nplot_multiple_runs(data_model)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/50 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  2%|▏         | 1/50 [00:01<01:04,  1.31s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  4%|▍         | 2/50 [00:02<01:01,  1.28s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  6%|▌         | 3/50 [00:03<01:02,  1.32s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\r  8%|▊         | 4/50 [00:05<01:02,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 10%|█         | 5/50 [00:06<01:03,  1.41s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 12%|█▏        | 6/50 [00:08<01:05,  1.48s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\r 14%|█▍        | 7/50 [00:10<01:07,  1.56s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 16%|█▌        | 8/50 [00:11<01:07,  1.60s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 18%|█▊        | 9/50 [00:13<01:06,  1.63s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 20%|██        | 10/50 [00:15<01:03,  1.59s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 22%|██▏       | 11/50 [00:16<01:01,  1.57s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 24%|██▍       | 12/50 [00:18<00:58,  1.55s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 26%|██▌       | 13/50 [00:19<00:57,  1.54s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 28%|██▊       | 14/50 [00:21<00:54,  1.53s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 30%|███       | 15/50 [00:22<00:54,  1.57s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 32%|███▏      | 16/50 [00:24<00:54,  1.60s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 34%|███▍      | 17/50 [00:26<00:55,  1.67s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 36%|███▌      | 18/50 [00:28<00:56,  1.77s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\r 38%|███▊      | 19/50 [00:30<00:56,  1.81s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 40%|████      | 20/50 [00:32<00:55,  1.86s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 42%|████▏     | 21/50 [00:34<00:53,  1.85s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 44%|████▍     | 22/50 [00:35<00:49,  1.76s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 46%|████▌     | 23/50 [00:38<00:53,  1.96s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 48%|████▊     | 24/50 [00:40<00:56,  2.19s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 50%|█████     | 25/50 [00:42<00:52,  2.10s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 52%|█████▏    | 26/50 [00:44<00:48,  2.03s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 54%|█████▍    | 27/50 [00:46<00:45,  1.97s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 56%|█████▌    | 28/50 [00:48<00:42,  1.94s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 58%|█████▊    | 29/50 [00:50<00:41,  1.98s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 60%|██████    | 30/50 [00:52<00:38,  1.92s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 62%|██████▏   | 31/50 [00:54<00:36,  1.94s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 64%|██████▍   | 32/50 [00:56<00:36,  2.02s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 66%|██████▌   | 33/50 [00:58<00:33,  1.98s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 68%|██████▊   | 34/50 [01:00<00:31,  1.98s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 70%|███████   | 35/50 [01:01<00:28,  1.93s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 72%|███████▏  | 36/50 [01:03<00:27,  1.96s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 74%|███████▍  | 37/50 [01:05<00:25,  1.93s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 76%|███████▌  | 38/50 [01:07<00:22,  1.87s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 78%|███████▊  | 39/50 [01:09<00:19,  1.82s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 80%|████████  | 40/50 [01:10<00:17,  1.77s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 82%|████████▏ | 41/50 [01:12<00:15,  1.77s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 84%|████████▍ | 42/50 [01:14<00:14,  1.76s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 86%|████████▌ | 43/50 [01:16<00:12,  1.74s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 88%|████████▊ | 44/50 [01:17<00:10,  1.78s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 90%|█████████ | 45/50 [01:19<00:08,  1.77s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 92%|█████████▏| 46/50 [01:21<00:07,  1.80s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 94%|█████████▍| 47/50 [01:23<00:05,  1.81s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 96%|█████████▌| 48/50 [01:25<00:03,  1.84s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 98%|█████████▊| 49/50 [01:27<00:01,  1.80s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n\r100%|██████████| 50/50 [01:28<00:00,  1.79s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r100%|██████████| 50/50 [01:28<00:00,  1.78s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/50 [00:00<?, ?it/s]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  2%|▏         | 1/50 [00:01<01:05,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  4%|▍         | 2/50 [00:02<01:03,  1.32s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  6%|▌         | 3/50 [00:03<01:01,  1.31s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  8%|▊         | 4/50 [00:05<01:03,  1.38s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 10%|█         | 5/50 [00:06<01:01,  1.37s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 12%|█▏        | 6/50 [00:08<01:03,  1.43s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 14%|█▍        | 7/50 [00:09<01:01,  1.44s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 16%|█▌        | 8/50 [00:11<01:01,  1.46s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 18%|█▊        | 9/50 [00:12<01:01,  1.50s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 20%|██        | 10/50 [00:14<00:59,  1.49s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 22%|██▏       | 11/50 [00:15<00:58,  1.49s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 24%|██▍       | 12/50 [00:17<00:56,  1.50s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 26%|██▌       | 13/50 [00:18<00:54,  1.48s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 28%|██▊       | 14/50 [00:20<00:51,  1.44s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 30%|███       | 15/50 [00:21<00:48,  1.39s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 32%|███▏      | 16/50 [00:22<00:46,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 34%|███▍      | 17/50 [00:24<00:44,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 36%|███▌      | 18/50 [00:25<00:42,  1.33s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 38%|███▊      | 19/50 [00:26<00:40,  1.32s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 40%|████      | 20/50 [00:27<00:38,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 42%|████▏     | 21/50 [00:29<00:37,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 44%|████▍     | 22/50 [00:30<00:36,  1.29s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 46%|████▌     | 23/50 [00:31<00:34,  1.28s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 48%|████▊     | 24/50 [00:33<00:33,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 50%|█████     | 25/50 [00:34<00:32,  1.31s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 52%|█████▏    | 26/50 [00:35<00:31,  1.32s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 54%|█████▍    | 27/50 [00:37<00:31,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_119111/3300034538.py:81: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  next_population[next_population[\"trait\"] == \"B\"].loc[i, \"trait\"] = \"A\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 56%|█████▌    | 28/50 [00:38<00:30,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 58%|█████▊    | 29/50 [00:39<00:28,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 60%|██████    | 30/50 [00:41<00:27,  1.37s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 62%|██████▏   | 31/50 [00:42<00:25,  1.35s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 64%|██████▍   | 32/50 [00:44<00:24,  1.37s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 66%|██████▌   | 33/50 [00:45<00:23,  1.36s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 68%|██████▊   | 34/50 [00:46<00:21,  1.35s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 70%|███████   | 35/50 [00:47<00:20,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 72%|███████▏  | 36/50 [00:49<00:18,  1.31s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 74%|███████▍  | 37/50 [00:50<00:16,  1.29s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 76%|███████▌  | 38/50 [00:51<00:15,  1.28s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 78%|███████▊  | 39/50 [00:53<00:14,  1.29s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 80%|████████  | 40/50 [00:54<00:12,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 82%|████████▏ | 41/50 [00:55<00:11,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 84%|████████▍ | 42/50 [00:56<00:10,  1.30s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 86%|████████▌ | 43/50 [00:58<00:09,  1.33s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 88%|████████▊ | 44/50 [00:59<00:07,  1.33s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 90%|█████████ | 45/50 [01:01<00:06,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 92%|█████████▏| 46/50 [01:02<00:05,  1.35s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 94%|█████████▍| 47/50 [01:03<00:04,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 96%|█████████▌| 48/50 [01:05<00:02,  1.35s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r 98%|█████████▊| 49/50 [01:06<00:01,  1.34s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r100%|██████████| 50/50 [01:07<00:00,  1.33s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r100%|██████████| 50/50 [01:07<00:00,  1.35s/it]\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](chapter08_files/figure-pdf/cell-9-output-159.pdf){fig-pos='H'}\n:::\n:::\n\n\n",
    "supporting": [
      "chapter08_files/figure-pdf"
    ],
    "filters": []
  }
}