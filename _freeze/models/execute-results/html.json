{
  "hash": "3f48b606d89cf1b80985d4c8a42d9369",
  "result": {
    "engine": "jupyter",
    "markdown": "# Models \n\nThroughout this book we will use on quantitative models to describe evolutionary processes. A model is a simplyfied description that captures what we know about a phenomenon of interest in terms of variables and their relations to one another. While models in this sense are always reductions of the real-world process being modeled, they have the benefit that all of their parts can be understood. Moreover, formal models usually incorporate one or several _parameters_, that is, variables the value of which is mutable. Changing parameter values thus renders different instances of a model that, in turn, allow one to ask the question \"What if?\" and to abserve the behavior of simulated processes in the long run. Answering this question under different conditions (different parameter settings) then will allow us to draw inferences from the modeling outcomes to interpret our phenomenon of interest.\n\nIt is precisely the ability of formal models to be adapted at will why they form the core part of this book. Starting with simple models with only very few variables, we will gradually make them more complex by including additional variables. However, it will remain our attempt to keep our models as simple as possible. While it is theoretically possible to include any number of variables in modeling, more complex models become harder to understand, and the interactions between the numerous variables more difficult to interpret. \n\nAs mentioned above, the goal of modeling is often to approximate rather than to recreate a process in the world. Sometimes, the goal is rather to show that a real process does _not_ conform to the outcomes of certain modeling assumptions, from which can be deduced that other factors---possibly yet unknown ones---must be taken into account. One of the most common baseline comparison models is the so-called 'neutral model [see, e.g., @Bentley2004_RandomDriftCulture], where cultural traits are randomly copied from previous generations. We will see in @sec-unbiased_transmission what the consequences of this assumption are. \n\nQuestions concerning model comparison---chosing the 'best' model for a problem at hand---or dealing with the trade-off between model complexity and interpretability are central issues in many areas of empirical science, such as machine learning, computational sociology, or cognitive psychology, and many textbooks dedicate some discussion to the topic [e.g. @Bishop2012_ModelbasedMachineLearning; @Farrell2018_ComputationalModelingCognition; @McElreath2020_StatisticalRethinkingBayesian]. For excellent discussions and examples of modeling in music research, see @Honing2006_ComputationalModelingMusica and @Finkensiepforthcoming_MusicTheoryModeldriven.\n\n## A simple example\n\nModels are meant to be abstract representations of \n(some part of) reality. They necessarily need \nto be simpler than reality, simple enough so that we \ncan understand them, but close enough to reality so\nthat they are actually useful to us. \n\nWhy not having more complex models that accurately \nrepresent reality? Well, first of all that is a \nvery difficult endeavour. But, more importantly:\n\n> No model is ever a complete recreation of reality. That would be pointless: we would have replaced a complex, incomprehensible reality with a complex, incomprehensible model. Instead, models are useful because of their simplicity. [@Acerbi2022, Introduction]\n\nSo what does that mean in practice? I will try to \ndemonstrate this with an admittedly boring but \nhopefully illustrative example. Assume we want to model the entire area of this (fictional) country:\n\n![The outline of a fictional country.](img/fictional_country.png)\n\nMaybe the most simple, albeit naive approach would be to say that the total area of this country can be \nmodeled with a square. A square is a very \nparsimonious model: in order to describe its area,\nonly one parameter is needed, its side length.\n\n![A square.](img/square.png)\n\nWhat's more, we can even give a precise mathematical\nformula for the area of our fictional country under \nthe square model:\n\n$$M_1(a) = a^2$$\n\nIn Python code, we could express this model as the following function:\n\n::: {#7da354f1 .cell execution_count=1}\n``` {.python .cell-code}\ndef square_model(a):\n    return a**2\n```\n:::\n\n\nOf course, this is not a good model of the \narea of the country. But one of the strengths\nof formal models is that they are unquivocal.\nThere might be situations, in which the rough \nestimate of the square model is actually sufficient \nfor our purpose. So why use a more complex model\nif the simplest one does the job? \n\nMost of the time, however, such a simplistic model\nwill not suffice and we need to invest brain power \nto come up with a better one.^['Better' means here \nthat it is closer to the reality we actually want to \ndescribe, while at the same time being as simple \nas possible. This trade-off is usually called \"Occam's razor\". Google it!]\nThe following model is one way to improve upon\nour first mode:\n\n![A rectangle.](img/rectangle.png)\n\nThe shape of the rectangle seems to fit our \ncountry's outline better. Hooray!\nAs for the square model, we do have a mathematical formuly to describe our rectangle model:\n\n$$M_2(a,b) = a \\cdot b$$\n\nIn Python code:\n\n::: {#fc0aca7c .cell execution_count=2}\n``` {.python .cell-code}\ndef rectangle(a,b):\n    return a * b\n```\n:::\n\n\nBut this improvement comes at a price:\ninstead of having only one parameter, `a`,\nwe now have two, `a` and `b`. \nOur model has instantly become twice as complex!\n\nModeling is at the core of social science and there are many \ngood text about this topic\n[@Smaldino2017_ModelsAreStupid;@Smaldino2023_ModelingSocialBehavior;@McElreath2020_StatisticalRethinkingBayesian]. \nIn the humanities, there are fewer approaches taking modeling seriously,\nbut they are growing in number [@Finkensiepforthcoming_MusicTheoryModeldriven;@Piotrowski2019_HistoricalModelsSerial].\n\n",
    "supporting": [
      "models_files"
    ],
    "filters": [],
    "includes": {}
  }
}